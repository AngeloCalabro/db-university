EX - Query con GROUP BY

1. Contare quanti iscritti ci sono stati ogni anno

SELECT COUNT(`id`) AS `students`, YEAR(`enrolment_date`) AS `anno_iscrizione` 
FROM `students` 
GROUP BY `anno_iscrizione`;


2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT COUNT(`id`) AS `teachers`, `office_address`
FROM `teachers` 
GROUP BY `office_address`;


3. Calcolare la media dei voti di ogni appello d'esame

SELECT AVG(`vote`) AS `media_voti` , `exam_id` AS `appello_esame` 
FROM `exam_student` 
GROUP BY `exam_id`;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT COUNT(`id`) AS `num_course`, `department_id` 
FROM `degrees` 
GROUP BY `department_id`;

-----------------------------------------------------------------------------------------------------
EX - Query con JOIN

1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.*, `degrees`.`name` 
FROM `students` 
INNER JOIN `degrees` 
ON `degrees`.`id` = `students`.`degree_id` 
WHERE `degrees`.`name` = 'Corso di Laurea in Economia';


2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT `degrees`.* 
FROM `degrees` 
INNER JOIN `departments` 
ON `departments`.`id` = `degrees`.`department_id` 
WHERE `departments`.`name` = 'Dipartimento di Neuroscienze' 
AND `degrees`.`level` = 'magistrale';


3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT `teachers`.`name` AS `teacher_name`, `teachers`.`surname` AS `teacher_surname`, `courses`.`name` AS `course_name` 
FROM `course_teacher`
INNER JOIN `teachers` 
ON `teachers`.`id` = `course_teacher`.`teacher_id` 
INNER JOIN `courses` 
ON `courses`.`id` = `course_teacher`.`course_id` 
WHERE `teachers`.`name` = 'Fulvio' && `teachers`.`surname` = 'Amato';


4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il
relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT `students`.`surname`, `students`.`name`, `degrees`.`name` AS `degree_name`, `degrees`.`level`, `degrees`.`address`, `departments`.`name` AS `department_name`
FROM `students`
INNER JOIN `degrees`
ON `degrees`.`id` = `students`.`degree_id`
INNER JOIN `departments`
ON `departments`.`id` = `degrees`.`department_id`
ORDER BY `students`.`surname` ASC;


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.`name` AS `degrees_name` , `courses`.`name` AS `courses_name`, `teachers`.`name` AS `teachers_name`, `teachers`.`surname` AS `teachers_surname`
FROM `degrees`
INNER JOIN `courses`
ON `courses`.`degree_id` = `degrees`.`id`
INNER JOIN `course_teacher`
ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `teachers`
ON `teachers`.`id` = `course_teacher`.`teacher_id`;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT DISTINCT `departments`.`name` AS `departments_name`,  `teachers`.`name` AS `teachers_name`, `teachers`.`surname` AS `teachers_surname`
FROM `departments`
INNER JOIN `degrees`
ON `degrees`.`department_id` = `departments`.`id`
INNER JOIN `courses`
ON `courses`.`degree_id` = `degrees`.`id`
INNER JOIN `course_teacher`
ON `course_teacher`.`course_id` = `courses`.`id`
INNER JOIN `teachers`
ON `teachers`.`id` = `course_teacher`.`teacher_id`
WHERE `departments`.`name` = 'Dipartimento di Matematica'
ORDER BY `teachers`.`surname` ASC;


7. BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per
superare ciascuno dei suoi esami

SELECT `students`.`id`, `students`.`name`,`students`.`surname`,`courses`.`name` AS `course_name`, `exam_student`.`vote` 
FROM `students` 
INNER JOIN `exam_student` ON `exam_student`.`student_id` = `students`.`id` INNER JOIN `exams` 
ON `exams`.`id` = `exam_student`.`exam_id` 
INNER JOIN `courses` 
ON `courses`.`id` = `exams`.`course_id` 
ORDER BY `students`.`id`;
